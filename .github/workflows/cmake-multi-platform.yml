# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "master" , "add_gh_workflow" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        os: [ubuntu-24.04]
        build_type: [Release]
        c_compiler: [clang]


    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Check Env
      run: |
        clang --version
        cmake --version
        echo $CC

    - name: Cache LLVM packages
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-build-${{ env.cache-name }}
        path: |
          ~/.llvm_prebuilt
          
    - name: DownloadLLVM
      run: |
        [[ -d ~/.llvm_prebuilt ]] || mkdir ~/.llvm_prebuilt
        cd ~/.llvm_prebuilt
        ls ~/.llvm_prebuilt
        [[ -f  clang+llvm-18.1.8-x86_64-linux-gnu-ubuntu-18.04.tar.xz  ]] || wget https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.8/clang+llvm-18.1.8-x86_64-linux-gnu-ubuntu-18.04.tar.xz
        [[ -d ~/llvm_extract ]] || mkdir ~/llvm_extract
        cd ~/llvm_extract
        tar -xf ~/.llvm_prebuilt/clang+llvm-18.1.8-x86_64-linux-gnu-ubuntu-18.04.tar.xz
        ls

    - name: Clean other llvm
      run: |
        ls /usr/lib/
        
    - name: Configure
      run: |
        cmake -S. -BRelease -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=~/llvm_extract/clang+llvm-18.1.8-x86_64-linux-gnu-ubuntu-18.04.tar.xz
        #cmake --build Release
      

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: true || cmake --build--config ${{ matrix.build_type }}


